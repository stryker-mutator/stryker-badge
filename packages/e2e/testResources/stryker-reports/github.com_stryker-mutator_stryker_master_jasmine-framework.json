{"files":{"/home/runner/work/stryker/stryker/packages/jasmine-framework/src/JasmineTestFramework.ts":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":4,"line":15},"start":{"column":51,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError"},{"id":"1","location":{"end":{"column":13,"line":14},"start":{"column":12,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"2","location":{"end":{"column":4,"line":28},"start":{"column":50,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError"},{"id":"3","location":{"end":{"column":13,"line":27},"start":{"column":12,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"4","location":{"end":{"column":4,"line":36},"start":{"column":58,"line":30}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError"},{"id":"5","location":{"end":{"column":65,"line":31},"start":{"column":38,"line":31}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"6","location":{"end":{"column":9,"line":35},"start":{"column":12,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import { TestFramework, TestSelection } from '@stryker-mutator/api/test_framework';\n\nexport default class JasmineTestFramework implements TestFramework {\n  /**\n   * Creates a code fragment which, if included in a test run,\n   * is run before a particular test is run.\n   */\n  public beforeEach(codeFragment: string): string {\n    return `\n        jasmine.getEnv().addReporter({\n          specStarted: function () {\n            ${codeFragment}\n          }\n        });`;\n  }\n\n  /**\n   * Creates a code fragment which, if included in a test run,\n   * is run before a particular test is run.\n   */\n  public afterEach(codeFragment: string): string {\n    return `\n        jasmine.getEnv().addReporter({\n          specDone: function () {\n            ${codeFragment}\n          }\n        });`;\n  }\n\n  public filter(testSelections: TestSelection[]): string {\n    const names = testSelections.map(selection => selection.name);\n    return `\n      jasmine.getEnv().specFilter = function (spec) {\n          return ${JSON.stringify(names)}.indexOf(spec.getFullName()) !== -1;\n      }`;\n  }\n}\n"},"/home/runner/work/stryker/stryker/packages/jasmine-framework/src/index.ts":{"language":"typescript","mutants":[{"id":"7","location":{"end":{"column":110,"line":5},"start":{"column":31,"line":5}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"8","location":{"end":{"column":86,"line":5},"start":{"column":77,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { declareClassPlugin, PluginKind } from '@stryker-mutator/api/plugin';\n\nimport JasmineTestFramework from './JasmineTestFramework';\n\nexport const strykerPlugins = [declareClassPlugin(PluginKind.TestFramework, 'jasmine', JasmineTestFramework)];\n"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}}