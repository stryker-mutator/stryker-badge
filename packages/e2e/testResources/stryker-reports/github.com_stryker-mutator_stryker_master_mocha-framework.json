{"files":{"/home/runner/work/stryker/stryker/packages/mocha-framework/src/MochaTestFramework.ts":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":4,"line":8},"start":{"column":51,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError"},{"id":"1","location":{"end":{"column":9,"line":7},"start":{"column":12,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"2","location":{"end":{"column":4,"line":14},"start":{"column":50,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError"},{"id":"3","location":{"end":{"column":9,"line":13},"start":{"column":12,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"4","location":{"end":{"column":4,"line":35},"start":{"column":50,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"CompileError"},{"id":"5","location":{"end":{"column":77,"line":17},"start":{"column":50,"line":17}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"6","location":{"end":{"column":10,"line":34},"start":{"column":12,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import { TestFramework, TestSelection } from '@stryker-mutator/api/test_framework';\n\nexport default class MochaTestFramework implements TestFramework {\n  public beforeEach(codeFragment: string): string {\n    return `beforeEach(function() {\n      ${codeFragment}\n    });`;\n  }\n\n  public afterEach(codeFragment: string): string {\n    return `afterEach(function() {\n      ${codeFragment}\n    });`;\n  }\n\n  public filter(testSelections: TestSelection[]) {\n    const selectedTestNames = testSelections.map(selection => selection.name);\n    return `var Mocha = window.Mocha || require('mocha');\n      var describe = Mocha.describe;\n      var selectedTestNames = ${JSON.stringify(selectedTestNames)};\n      if (window.____mochaAddTest) {\n        Mocha.Suite.prototype.addTest = window.____mochaAddTest;\n      } else {\n        window.____mochaAddTest = Mocha.Suite.prototype.addTest\n      }\n      var realAddTest = Mocha.Suite.prototype.addTest;\n\n      Mocha.Suite.prototype.addTest = function (test) {\n        // Only actually add the tests with the expected names\n        var name = this.fullTitle() + ' ' + test.title;\n        if(selectedTestNames.indexOf(name) !== -1) {\n          realAddTest.apply(this, arguments);\n        }\n      };`;\n  }\n}\n"},"/home/runner/work/stryker/stryker/packages/mocha-framework/src/index.ts":{"language":"typescript","mutants":[{"id":"7","location":{"end":{"column":106,"line":5},"start":{"column":31,"line":5}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"NoCoverage"},{"id":"8","location":{"end":{"column":84,"line":5},"start":{"column":77,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"}],"source":"import { declareClassPlugin, PluginKind } from '@stryker-mutator/api/plugin';\n\nimport MochaTestFramework from './MochaTestFramework';\n\nexport const strykerPlugins = [declareClassPlugin(PluginKind.TestFramework, 'mocha', MochaTestFramework)];\n"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}}